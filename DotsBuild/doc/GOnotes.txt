
sub applyGORules{
    my ($propertySet) = @_;

   # Run MakeMouseGOPredictions.cmd
   #
   # This command is only valid for this build...in future will need to 
   # modifify appropriately (see arguement descriptions below)
   #
   # NOTES: There is also a MakeHumanGOPredictions.cmd file that can 
   #        be used for this build of HumDoTS.
   #
   # 1.  rule-sql-filter : will need to change each time.  The purpose here is to 
   #                       select out the rules to apply. 
   # 2.  guide   : musdots for mouse and humdots for human. 
   # 3.  qs-type : na here (aa other option)
   # 4.  go-ver  : current version with rules generated is 2.155.  Will need to update
   #               this when have new rules against new ontology version.
   # 5.  pv-ratio: used to determine if rule should be applied.  do not change unless 
   #               familar with algorithm.
   # 6.  ss-xdb  : these are the external_db_ids of the motif databases.
   # 7.  ignore-expred : needed here because already have a set of predictions 
   #                     using version 2.155 of ontology.  Note that this does not 
   #                     mean that we will have multiple aasequencegofunction entries
   #                     if multiple rules generate same association.  (i.e. ignore-expred
   #                     only ignores pre-existing predictions, not those generated by this
   #                     run of the plugin.)
   # 8.  sql-filter : used to limit the similarities to those with p-value better then 10^-5
   #                  at one point Brian was loading CDD similaritites with p-value > 10^-5.
   # 9.  mode : add specifies that you are making predictions.   

 
}

sub versionOldPGF{
    my ($propertySet) = @_;

   # Since we are not using a new version of the ontology, you 
   # will need to write something to version out all of the existing
   # mouse GO predictions from ProteinGoFunction that have not been 
   # manually reviewed.  This is necessary due to the fact that they 
   # are no longer valid and may conflict with the new predictions.
   # BE CAREFUL NOT TO DELETE THE HUMAN PREDICTIONS
   # (unless you are okay with this.  Sometimes Joan will look at human 
   # during mouse build and visa versa...)   
   #  
   # Here's a query that will return all the ProteinGoFunction entries that 
   # should be versioned out for mouse:
   #
   # SELECT pgf.protein_go_function_id 
   # FROM RNA r, Protein p, ProteinGoFunction pgf, GOFunction gf, 
   #      Assembly ass, RNASequence rs, NAFeature naf 
   # WHERE ass.taxon_id = 14                       and 
   #       ass.na_sequence_id = naf.na_sequence_id and 
   #       naf.na_feature_id = rs.na_feature_id    and 
   #       r.rna_id = rs.rna_id                    and 
   #       p.rna_id = r.rna_id                     and 
   #       pgf.protein_id = p.protein_id           and 
   #       pgf.manually_reviewed = 0               and 
   #       pgf.go_function_id = gf.go_function_id  and 
   #       gf.go_cvs_version  = '2.155'
   #
   #
   # In all honesty, I don't see any real need to version these.  This 
   # information is redundant as it already exists in the AASequenceGoFunction
   # table.  So, perhaps we can just delete them...very carefully!
   #

}

sub copyGOPredictions{
    my ($propertySet) = @_;

  # Run CopyMusDotsAGFtoPGF.cmd
  #
  # This will copy the predictions over to ProteinGoFunction.  The ProteinGoFunction
  # will also get an evidence entry made which points back to the prediction.  From 
  # the prediction, you can get all relevant evidence.  (This is what is done from the 
  # annotator interface for example).  Any pre-existing manually reviewed ProteinGoFunction
  # entries against the same version of the ontology will also get an evidence entry 
  # that points back to the prediction.
  #
  # NOTES:
  #
  #  1.  Will need to change the ID-SQL, in particular, change the row_alg_invocation_id 
  #      to represent the algorithm invocation id of the predictions you just generated.

