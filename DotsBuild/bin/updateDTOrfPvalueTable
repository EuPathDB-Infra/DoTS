#!@perl@
use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;
use GUS::ObjRelP::DbiDatabase;
use GUS::Common::GusConfig;


my ($verbose,$taxon,$gusConfigFile,$allgenesSchema);
&GetOptions("verbose!"=> \$verbose,
            "allgenesSchema=s"=> \$allgenesSchema,
	    "taxon=i"=>\$taxon,
            "gusConfigFile=s" => \$gusConfigFile);


die "usage: makeDTOfrPValueTable --taxon --allgenesSchema --verbose --gusConfigFile [\$GUS_CONFIG_FILE]\n"
unless ($allgenesSchema && $taxon);

print STDERR "Establishing dbi login\n" if $verbose;

my $gusconfig = GUS::Common::GusConfig->new($gusConfigFile);

my $db = GUS::ObjRelP::DbiDatabase->new($gusconfig->getDbiDsn(),
					$gusconfig->getDatabaseLogin(),
					$gusconfig->getDatabasePassword(),
					$verbose,0,1,
					$gusconfig->getCoreSchemaName());

my $dbh = $db->getQueryHandle();

my $tableName = "${allgenesSchema}.DTOrfPValue";

my $deleteSql =
"delete from $tableName where taxon_id = $taxon";
print STDERR "Deleting \n";
print STDERR "deleteSql: $deleteSql\n" if $verbose;

$dbh->do($deleteSql) || die "Delete failed.\nSQL: $insertSql";

print STDERR "Committing delete\n";
$dbh->commit(); 

my $insertSql = 
"insert into $tableName 
    select a.taxon_id, a.na_sequence_id, taf.p_value
    from dots.Assembly a, dots.NAFeature naf, dots.TranslatedAAFeature taf
    where a.na_sequence_id = naf.na_sequence_id
    and naf.na_feature_id = taf.na_feature_id and a.taxon_id = $taxon";

print STDERR "Inserting \n";
print STDERR "insertSql: $insertSql\n" if $verbose;

$dbh->do($insertSql) || die "Insert failed.\nSQL: $insertSql";

print STDERR "Committing insert\n";
$dbh->commit();






