#!@perl@ 

## dump a list of DoTS assemblies for each DoTS gene-based on similarity
##

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;
use GUS::ObjRelP::DbiDatabase;
use GUS::Common::GusConfig;

my ($verbose,$taxon_id,$gusConfigFile);
&GetOptions("verbose!"=> \$verbose,
            "taxon_id=s" => \$taxon_id,
            "gusConfigFile=s" => \$gusConfigFile);

die "usage: getIdsPerAssembly --taxon_id --verbose --gusConfigFile [\$GUS_CONFIG_FILE]\n" unless $taxon_id;

print STDERR "Establishing dbi login\n" if $verbose;

my $gusconfig = GUS::Common::GusConfig->new($gusConfigFile);

my $db = GUS::ObjRelP::DbiDatabase->new($gusconfig->getDbiDsn(),
					$gusconfig->getReadOnlyDatabaseLogin(),
					$gusconfig->getReadOnlyDatabasePassword(),
					$verbose,0,1,
					$gusconfig->getCoreSchemaName());

my $dbh = $db->getQueryHandle();

##need to dump the input accesions along with a bit to idicate if mrNA

my $sql = "select tu.gene_id,ass.na_sequence_id from rna r, transcriptunit tu, rnasequence rs, rnafeature rf, assembly ass where r.transcript_unit_id = tu.transcript_unit_id and r.rna_id = rs.rna_id and rs.na_feature_id = rf.na_feature_id and rf.na_sequence_id = ass.na_sequence_id and ass.taxon_id = 8 order by tu.gene_id";


print STDERR "Query: $sql\n" if $verbose;

my $stmt = $dbh->prepareAndExecute($sql);

my $prev_DG;
my @ids;
my $ct = 0;
while(my($DG,$DT) = $stmt->fetchrow_array()){
  $DT = "DT.".$DT;
  if($DG!= $prev_DG){
    print &generateOutput($prev_DG,@ids) if defined $prev_DG;
    undef @ids;
    $ct++;
    print STDERR "Processed $ct\n" if $verbose && $ct % 1000 == 0;
  }
  push(@ids,$DT);
  $prev_DG = $DG;
}
print &generateOutput($prev_DG,@ids); ##do the last one

$db->logout();

sub generateOutput {
  my($DG,@ids) = @_;
  return ">DG." . $DG . " \(".scalar(@ids)." assemblies\): \(".join(', ',@ids)."\)\n";
}
