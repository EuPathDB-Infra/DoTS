#!@perl@


use strict;

use Getopt::Long;

my ($inputFile,$outputFile);
&GetOptions("inputFile=s"=> \$inputFile,
	    "outputFile=s"=> \$outputFile);

if(! $inputFile || ! $outputFile){
  die "usage:DoTS2GeneCardsParse --inputFile DoTS to MGI map e.g. <DoTS><gene1><gene2>... --outputFile tab delimited file with genecard DT.xxxxx\n";}

my $nLinks = 0;
my %dotsMap;


open (INFILE,$inputFile); 

while(<INFILE>) {
  chomp;
  if (/^(DT\.\d+)\t(.*)$/) {
    my $dotsId = $1;
    my $idStr = $2;
    my @ids = split(/\s/, $idStr);
    my $nIds = scalar(@ids);
    $nLinks += $nIds;
    
    die "Couldn't parse GeneCards IDs from $_" if ($nIds < 1);
    die "DT.$dotsId appears > once on left hand side" if (defined($dotsMap{$dotsId}));
    
    $dotsMap{$dotsId} = \@ids;
    
  } else {
    die "Couldn't parse $_\n";
  }
}

close (INFILE);

my $numDoTS = scalar (keys %dotsMap);

print STDERR ("$numDoTS DoTS in file.\n$nLinks genecards to DoTS mapping\n");

open (OUTFILE, ">$outputFile");

foreach my $dotsId (keys %dotsMap) {
  foreach my $geneCard (@{$dotsMap{$dotsId}}) {
    $geneCard =~ s/,//;
    print OUTFILE ("$geneCard\t$dotsId\n");
  }
}

