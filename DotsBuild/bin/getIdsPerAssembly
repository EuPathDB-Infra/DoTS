#!@perl@ 

## dump a list of accessions for each dots mrna with bit to identify if mRNA
##

##Brian Brunk 
## modified for gus 2/17/2000
use strict;
use Getopt::Long;
use GUS::ObjRelP::DbiDatabase;
use GUS::Common::GusConfig;

my ($verbose,$taxon_id,$gusConfigFile);
&GetOptions("verbose!"=> \$verbose,
            "taxon_id=s" => \$taxon_id,
            "gusConfigFile=s" => \$gusConfigFile);

die "usage: getIdsPerAssembly --taxon_id --verbose --gusConfigFile [\$GUS_CONFIG_FILE]\n" unless $taxon_id;

print STDERR "Establishing dbi login\n" if $verbose;

my $gusconfig = GUS::Common::GusConfig->new($gusConfigFile);

my $db = GUS::ObjRelP::DbiDatabase->new($gusconfig->getDbiDsn(),
					$gusconfig->getReadOnlyDatabaseLogin(),
					$gusconfig->getReadOnlyDatabasePassword(),
					$verbose,0,1,
					$gusconfig->getCoreSchemaName());

my $dbh = $db->getQueryHandle();

##need to dump the input accesions along with a bit to idicate if mrNA

my $sql = "select ass.assembly_na_sequence_id,e.source_id,e.sequence_type_id
     from dots.ExternalNASequence e, dots.AssemblySequence ass
     where e.na_sequence_id = ass.na_sequence_id 
     and ass.assembly_na_sequence_id is not null " .
     ($taxon_id ? "and e.taxon_id = $taxon_id " : "") .
     "order by ass.assembly_na_sequence_id";

print STDERR "Query: $sql\n" if $verbose;

my $stmt = $dbh->prepareAndExecute($sql);

my $prev_id;
my @ids;
my $ct = 0;
while(my($rna_id,$acc,$type) = $stmt->fetchrow_array()){
  if($rna_id != $prev_id){
    print &generateOutput($prev_id,@ids) if defined $prev_id;
    undef @ids;
    $ct++;
    print STDERR "Processed $ct\n" if $verbose && $ct % 1000 == 0;
  }
  push(@ids,$type == 7 ? "$acc.1" : "$acc");
  $prev_id = $rna_id;
}
print &generateOutput($prev_id,@ids); ##do the last one

$db->logout();

sub generateOutput {
  my($rna_id,@ids) = @_;
  return ">DT.$rna_id (".scalar(@ids)." sequences\): \(".join(', ',@ids)."\)\n";
}
