#!/usr/bin/perl 

## dump a list of accessions for each dots mrna with bit to identify if mRNA
##

##Brian Brunk 
## modified for gus 2/17/2000
use strict;
use DBI;
use Getopt::Long;
use Objects::GUS::ObjRelP::DbiDatabase;

my ($verbose,$taxon_id,$login,$password,$database);
&GetOptions("verbose!"=> \$verbose,
            "taxon_id=s" => \$taxon_id,
            "login=s" => \$login,"password=s" => \$password,
            "database=s" => \$database );

die "usage: getIdsPerAssembly --taxon_id --verbose --login [gusdevreadonly] --password [pasword for same] --database [gusdev]\n" unless $taxon_id || $login || $database || $password || $verbose;

$database = $database ? $database : "GUSdev";
$login = $login ? $login : 'gusdevreadonly';
$password = $password ? $password : 's7fp4erv';

print STDERR "Establishing dbi login\n" if $verbose;
my $db = new GUS::ObjRelP::DbiDatabase( undef, $login, $password, $verbose, 0, 1, $database );

my $dbh = $db->getQueryHandle();

##need to dump the input accesions along with a bit to idicate if mrNA

my $sql = "select ass.assembly_na_sequence_id,e.source_id,e.sequence_type_id
     from ExternalNASequence e, AssemblySequence ass
     where e.na_sequence_id = ass.na_sequence_id 
     and ass.assembly_na_sequence_id is not null " .
     ($taxon_id ? "and e.taxon_id = $taxon_id " : "") .
     "order by ass.assembly_na_sequence_id";

print STDERR "Query: $sql\n" if $verbose;

my $stmt = $dbh->prepareAndExecute($sql);

my $prev_id;
my @ids;
my $ct = 0;
while(my($rna_id,$acc,$type) = $stmt->fetchrow_array()){
  if($rna_id != $prev_id){
    print &generateOutput($prev_id,@ids) if defined $prev_id;
    undef @ids;
    $ct++;
    print STDERR "Processed $ct\n" if $verbose && $ct % 1000 == 0;
  }
  push(@ids,$type == 7 ? "$acc.1" : "$acc");
  $prev_id = $rna_id;
}
print &generateOutput($prev_id,@ids); ##do the last one

$db->logout();

sub generateOutput {
  my($rna_id,@ids) = @_;
  return ">DT.$rna_id (".scalar(@ids)." sequences\): \(".join(', ',@ids)."\)\n";
}
