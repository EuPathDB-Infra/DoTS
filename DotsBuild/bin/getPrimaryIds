#!@perl@

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;
use GUS::ObjRelP::DbiDatabase;
use GUS::Common::GusConfig;

my ($debug,$verbose,$outFile,$idSQL,$gusConfigFile);
&GetOptions("verbose!"=> \$verbose,
            "outputFile=s" => \$outFile,
	    "idSQL=s" => \$idSQL, 
            "gusConfigFile=s" => \$gusConfigFile );

if(!$idSQL || !$outFile){
	die "usage: getPrimaryIds.pl --outputFile <outfile> --verbose --debug --idSQL 'sql stmt that returns primary_identifiers' --gusConfigFile [\$GUS_CONFIG_FILE]\n";
}

print STDERR "Establishing dbi login\n" if $verbose;

my $gusconfig = GUS::Common::GusConfig->new($gusConfigFile);

my $db = GUS::ObjRelP::DbiDatabase->new($gusconfig->getDbiDsn(),
					$gusconfig->getReadOnlyDatabaseLogin(),
					$gusconfig->getReadOnlyDatabasePassword,
					$verbose,0,1,
					$gusconfig->getCoreSchemaName());

my $dbh = $db->getQueryHandle();

open(OUT,">>$outFile");

print STDERR "SQL: $idSQL\n" if $verbose;
my $count = 0;
my $idStmt = $dbh->prepareAndExecute($idSQL);

while(my ($id) = $idStmt->fetchrow_array()){
  $count++;
  print OUT "$id\n";
}



