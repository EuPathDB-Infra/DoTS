#!@perl@ 

## make a clusterfile of assemblies selected using supplied sql query

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;
use GUS::ObjRelP::DbiDatabase;
use GUS::Common::GusConfig;

my ($verbose,$gusConfigFile,$idSQL,$clusterFile);
&GetOptions("verbose!"=> \$verbose,
	    "idSQL=s" => \$idSQL,
	    "clusterFile=s" => \$clusterFile,
            "gusConfigFile=s" => \$gusConfigFile,);

die "usage: getIdsPerAssembly es
--verbose --gusConfigFile [\$GUS_CONFIG_FILE] --idSQL sql query to retrieve na_sequence_ids of assemblies for reassembly --clusterFile temporary cluster file with full path, to be created\n" unless $taxon_id;

print STDERR "Establishing dbi login\n" if $verbose;

my $gusconfig = GUS::Common::GusConfig->new($gusConfigFile);

my $db = GUS::ObjRelP::DbiDatabase->new($gusconfig->getDbiDsn(),
					$gusconfig->getReadOnlyDatabaseLogin(),
					$gusconfig->getReadOnlyDatabasePassword(),
					$verbose,0,1,
					$gusconfig->getCoreSchemaName());

my $dbh = $db->getQueryHandle();

open (CLUSTER, ">$clusterFile");

my $stmt = $dbh->prepareAndExecute($idSQL);
my $num = 1;
while(my $id = $stmt->fetchrow_array()){
  print CLUSTER "Cluster_$num (1 sequences): (DT.$id)\n";
}

close CLUSTER;


